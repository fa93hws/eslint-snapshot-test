name: CI

on:
  push:
    paths-ignore:
      - '**.md'

jobs:
  linting-test:
    name: Linting and test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Find Yarn Cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: ${{ runner.OS }}-yarn-
      - name: Run yarn
        run: yarn
      - name: Find linting & testing Cache
        uses: actions/cache@v1
        with:
          path: cache
          key: ${{ runner.OS }}-lintingcache-${{ hashFiles('yarn.lock')}}
          restore-keys: ${{ runner.OS }}-lintingcache-
      - name: Check ESLint
        run: yarn lint:cache
      - name: Check code style
        run: yarn format:prettier
      - name: Run unit test
        run: yarn test --coverage
      - name: Upload code coverage to artifects
        uses: actions/upload-artifact@v1
        if: runner.OS == 'ubuntu-latest'
        with:
          name: coverage
          path: coverage
      - name: Check Typescript Types
        run: yarn lint:types:cache

  upload-code-coverage:
    needs: linting-test
    name: Upload code coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Download coverage artifects
        uses: actions/upload-artifact@v1
        with:
          name: coverage
      - uses: actions/checkout@master
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
